name: Get_Solution_And_Commit

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      solution-name: 
        required: true
      dynamic_branch:
        description: Select branch
        required: true
        type: dynamic_branch
        default: main

jobs:
  build:
    runs-on: windows-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
      
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # install pac
      - name: install pac
        run: |
          dotnet tool install --global Microsoft.PowerApps.CLI.Tool   
          
      # get solution from environment and commit to environment
      - name: create solution
        run: |       
          pac auth create --applicationId ${{ secrets.APP_ID }} --clientSecret '${{ secrets.CLIENT_SECRET }}' -t '${{ secrets.TENANT_ID }}' --environment '${{ secrets.ENV }}'
          $workingFolder='${{ github.event.inputs.solution-name }}'
          $solutionName='${{ github.event.inputs.solution-name }}'
          $zipFile = ".\$solutionName\$solutionName.zip"
          
          pac solution export --name $solutionName --path .\$solutionName --overwrite
          #unpack solution
          pac solution unpack --zipfile $zipFile --folder $workingFolder --processCanvasApps
          dir /s /b
      
      - name: commit files
        run: |
          dir
          git config --global user.email "Sabine.Franz@capgemini.com"
          git config --global user.name "Sabine"
          git checkout main     
          git add .
          git status          
          git pull
          git commit -m "generate solution"
          git push -f origin main


