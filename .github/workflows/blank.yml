# This is a basic workflow to help you get started with Actions

name: Create_Solution

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      publisher-name: 
        required: true
      publisher-prefix: 
          required: true
      solution-name: 
          required: true
      environment: 
          required: true
          
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Define a variable
        id: define_var
        run: echo "workingFolder=./solutions" >> $GITHUB_ENV

      # install pac
      - name: install pac
        run: |
          dotnet tool install --global Microsoft.PowerApps.CLI.Tool

      # create solution
      - name: create solution
        run: |       
          pac auth create --applicationId ${{ secrets.APP_ID }} --clientSecret '${{ secrets.CLIENT_SECRET }}' -t '${{ secrets.TENANT_ID }}'
          pac solution init --publisher-name '${{ github.event.inputs.publisher-name }}' --publisher-prefix  '${{ github.event.inputs.publisher-prefix }}' --outputDirectory '${{ github.event.inputs.solution-name }}'
          ls -R          
          msbuild ${{ github.event.inputs.solution-name }} /t:build /restore

      # connect powerapps environment

      # create
      - name: generate import file
        run: |
          ls -R
          pwd
          find $(pwd) -maxdepth 1 -type f -not -path '*/\.*' | sort
          msbuild ${{ github.event.inputs.solution-name }} /t:build /restore

      # deploy solution
      - name: deploy solution
        run: pac solution import --path .\${{ env.workingFolder }}\bin\Debug\${{ github.event.inputs.solution-name }}.zip

      # commit solution
      
      
