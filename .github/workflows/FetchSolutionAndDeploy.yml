# This is a basic workflow to help you get started with Actions

name: Fetch_Solution_And_Deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      solution-name: 
          required: true
      environment: 
          required: false         
    
jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # install pac
      - name: install pac
        run: |
          dotnet tool install --global Microsoft.PowerApps.CLI.Tool      
      # create solution
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        
      # create solution
      - name: create solution
        run: |      
          dir /A-D /S /B
          pac auth create --applicationId ${{ secrets.APP_ID }} --clientSecret '${{ secrets.CLIENT_SECRET }}' -t '${{ secrets.TENANT_ID }}' --environment '${{ secrets.ENV }}'
          
          $rootDirectory = '${{ github.event.inputs.solution-name }}'
          # Construct the path to the "CanvasApps" directory
          $canvasAppsDirectory = Join-Path -Path $rootDirectory -ChildPath "CanvasApps"
          
          # Check if the "CanvasApps" directory exists
          if (Test-Path -Path $canvasAppsDirectory -PathType Container) {
              # Get all immediate directories within "CanvasApps"
              $directories = Get-ChildItem -Path $canvasAppsDirectory -Directory
          
              # Output each directory path
              foreach ($dir in $directories) {
                  pac canvas pack --msapp "$dir.msapp" --sources $dir.FullName
              }
          } else {
              Write-Host "The 'CanvasApps' directory does not exist in '$rootDirectory'."
          }
          
          $workingFolder=".\prepSolution\"
          $zipFile = ".\finalSolution.zip"
          pac solution pack --zipfile $zipFile --folder $workingFolder
          
          
          pac solution import --path $zipFile --force-overwrite
